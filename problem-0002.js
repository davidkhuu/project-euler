// Project Euler
// Problem 2 - Even Fibonacci numbers
// Each new term in the Fibonacci sequence is generated by adding the previous
// two terms. By starting with 1 and 2, the first 10 terms will be:

// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

// By considering the terms in the Fibonacci sequence whose values do not exceed
// four million, find the sum of the even-valued terms

// Author:  David Khuu
// Date:    May 20, 2016

// Returns the num-th term of the Fibonacci sequence (based on Project Euler's
// example of the Fibonacci sequence)
function fibonacci(num) {
  if (num == 0) {
    return 1;
  } else if (num == 1) {
    return 2;
  } else {
    return fibonacci(num-1) + fibonacci(num-2);
  }
}

// Returns the sum of the even-valued terms up to num
function sumOfEvenFibs(num) {
  var sum = 0;
  var i = 1;
  var curr = 0;

  // Loop until the next Fibonacci number is higher than num
  while (true) {
    var fib = fibonacci(i);
    if (fib > num) {
      break;
    } else {
      // If the number is even, add it to the current running sum
      if (fib % 2 == 0) {
        sum += fib;
      }
      i++;
    }
  }

  return sum;
}

console.log(sumOfEvenFibs(4000000));
